AWSTemplateFormatVersion: "2010-09-09"
Description: This is a common stack for creating a VPC with public and private subnets

# Parameters section:
Parameters:

  Environment:
    Type: String
    Default: Testing
    Description: The environment name for the stack
  
  CidrVPC:
    Type: String
    Default: 10.0.0.0/16
    Description: The CIDR block for the VPC

  CidrPrivateSubnet:
    Type: String
    Default: 10.0.0.0/20
    Description: The CIDR block for the private subnet

  CidrPublicSubnet:
    Type: String
    Default: 10.0.16.0/20
    Description: The CIDR block for the public subnet
  
  AvailabilityZonePrivateSubnet:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
    Description: The availability zone for the private subnet

  AvailabilityZonePublicSubnet:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1b
    Description: The availability zone for the private subnet

# Resources section:
Resources:
  ## VPC
  defaultVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: !Ref CidrVPC
        Tags:
          - Key: Name
            Value: DefaultVPC
          - Key: Environment
            Value: !Ref Environment
          - Key: Resource
            Value: vpc
  ## Internet Gateway for traffic to the internet
  defaultIntertnetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: DefaultInternetGateway
        - Key: Environment
          Value: !Ref Environment
        - Key: Resource
          Value: internet-gateway
  ## Attach the internet gateway to the VPC
  gatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref defaultVPC
      InternetGatewayId: !Ref defaultIntertnetGateway
  ## Private subnet
  privateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref defaultVPC
      CidrBlock: !Ref CidrPrivateSubnet
      AvailabilityZone: !Ref AvailabilityZonePrivateSubnet
      Tags:
        - Key: Name
          Value: PrivateSubnet
        - Key: Environment
          Value: !Ref Environment
        - Key: Resource
          Value: subnet
  ## Route table for the private subnet
  privateSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref defaultVPC
      Tags:
        - Key: Name
          Value: PrivateSubnetRouteTable
        - Key: Environment
          Value: !Ref Environment
        - Key: Resource
          Value: route-table
  ## Associate the private subnet with the route table
  privateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnet
      RouteTableId: !Ref privateSubnetRouteTable
  ## Public subnet
  publicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref defaultVPC
      CidrBlock: !Ref CidrPublicSubnet
      AvailabilityZone: !Ref AvailabilityZonePublicSubnet
      Tags:
        - Key: Name
          Value: PublicSubnet
        - Key: Environment
          Value: !Ref Environment
        - Key: Resource
          Value: subnet
  ## Route table for the public subnet
  publicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref defaultVPC
      Tags:
        - Key: Name
          Value: PublicSubnetRouteTable
        - Key: Environment
          Value: !Ref Environment
        - Key: Resource
          Value: route-table
  ## Associate the public subnet with the route table
  publicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet
      RouteTableId: !Ref publicSubnetRouteTable
  ## Route for the public subnet to the internet
  publicSubnetRoute:
    Type: AWS::EC2::Route
    DependsOn: gatewayAttachment
    Properties:
      RouteTableId: !Ref publicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref defaultIntertnetGateway